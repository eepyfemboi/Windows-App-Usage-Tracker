Create an asynchronous python program that tracks the usage of apps on a Windows pc and how long the user is active on each app and how long each app is open in the background. The script should track app usage by iterating over the processes that have a GUI window open on the device similar to how task manager sorts "Apps" from "Background Processes", and stores usage data in a sqlite database. To prevent dynamic window titles from skewing the data, it should be saved based on the name of the app or executable or some other sort of consistant and reliable way to differentiate apps. The data should be recorded once every minute, in the following format (this is merely an example. do your best to adapt the json structure to a sqlite table, but try to maintain this general format):
{"timestamp": "<timestamp>", "active_app": "<app id>", "background_apps": ["<app id 1>", "<app id 2>"]}
The app usage time will be calculated based on how many data recordings show the app id, and it should be possible to display a graph showing the app usages over time, and the total time spent on apps, etc.
There should be a web GUI that shows the current usage of apps and a local webserver using aiohttp.web to handle requests. The local webserver should be served on port 33117 and should only accept requests originating from the same device. Don't put too much effort into the GUI for now, as this will be expanded upon later.
Make sure to add functions that can be used to retrieve data based on certain parameters to be used when expanding and filling in the GUI later.
